

Таким образом: метод — функция, применяемая к объекту. В данном случае к строке. Метод вызывается в виде имя_объекта.имя_метода(параметры).

Например, s.find('e') — это применение к строке s метода find с одним параметром 'e'.

Методы строкового типа данных можно разделить на три группы:

Конвертация регистра;
Поиск и замена;
Классификация символов.

===========================================================================

Метод capitalize() возвращает копию строки s, в которой первый символ имеет верхний регистр, а все остальные символы имеют нижний регистр.

Символы, не являющиеся буквами алфавита, остаются неизменными. Результатом выполнения следующего кода:

s = 'foo123#BAR#.'
print(s.capitalize())
будет:

Foo123#bar#.

================================================================================

Метод swapcase() возвращает копию строки s, в которой все символы, имеющие верхний регистр, преобразуются в символы нижнего регистра и наоборот.

 Результатом выполнения следующего кода:

s = 'FOO Bar 123 baz qUX'
print(s.swapcase())
будет:

foo bAR 123 BAZ Qux

=====================================================================================

Метод title() возвращает копию строки s, в которой первый символ каждого слова переводится в верхний регистр.

Результатом выполнения следующего кода:

s = 'the sun also rises'
print(s.title())
будет:

The Sun Also Rises
Этот метод использует довольно простой алгоритм: он не пытается различить важные и неважные слова и не обрабатывает аббревиатуры и апострофы. Результатом выполнения следующего кода:

s = "what's happened to ted's IBM stock?"
print(s.title())
будет:

What'S Happened To Ted'S Ibm Stock?



=============================================================================================

Метод lower()
Метод lower() возвращает копию строки s, в которой все символы имеют нижний регистр.

Результатом выполнения следующего кода:

s = 'FOO Bar 123 baz qUX'
print(s.lower())
будет:

foo bar 123 baz qux

========================================================================================

Метод upper()
Метод upper() возвращает копию строки s, в которой все символы имеют верхний регистр.

Результатом выполнения следующего кода:

s = 'FOO Bar 123 baz qUX'
print(s.upper())
будет:

FOO BAR 123 BAZ QUX

===============================================================================================

capitalize — писать прописными буквами, закрепить.
swapcase — обменять регистр. swap — гл. обмениваться, case — случай, регистр, падеж, дело, расследование...
title — заголовок, титул.
lower — нижний.
upper — верхний.

==================================================================================================

На вход программе подается строка состоящая из имени и фамилии человека, разделенных одним пробелом. Напишите программу, которая проверяет, что имя и фамилия начинаются с заглавной буквы.

s = input()
if s == s.title():
    print('YES')
else:
    print('NO')

==========================================================================================================


Формат выходных данных
Программа должна вывести «YES» если текст имеет хороший оттенок и «NO» в противном случае.

Примечание. Текст содержащий хорош, ХОРОШ, Хорош, хОРОШ и т.д. имеет хороший оттенок.

s = input()
s = s.lower()
if 'хорош' in s:
    print('YES')
else:
    print('NO')


==============================================================================================================

print('YES' if 'хорош' in input().lower() else 'NO')

===========================================================================================================

На вход программе подается строка. Напишите программу, которая подсчитывает количество буквенных символов в нижнем регистре.

s = input()
count = 0
for i in range(len(s)):
    if s[i].islower():
        count += 1
print(count)

===============================================================================================================


