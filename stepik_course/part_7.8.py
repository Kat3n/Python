


=====================================

Рассмотрим цикл, который частично моделирует электронные часы. Он показывает секунды от 0 до 59:

for seconds in range(60):
    print(seconds)
Можно добавить переменную minutes и вложить цикл написанный выше внутрь еще одного цикла, который повторяется 60 раз:

for minutes in range(60):
    for seconds in range(60):
        print(minutes, ':', seconds)
Для того, чтобы сделать модель законченной, можно добавить еще одну переменную для подсчета часов:

for hours in range(24):
    for minutes in range(60):
        for seconds in range(60):
            print(hours, ':', minutes, ':', seconds)




вложенный цикл выполняет все свои итерации для каждой отдельной итерации внешнего цикла;
вложенные циклы завершают свои итерации быстрее, чем внешние циклы;
для того, чтобы получить общее количество итераций вложенного цикла, надо перемножить количество итераций всех циклов.


=============================================

Оператор break выполняет прерывание ближайшего цикла в котором он расположен. Аналогично, оператор continue осуществляет переход на следующую итерацию ближайшего цикла.

for i in range(3):
    for j in range(3):
        print(i, j)



Изменим код, добавив во вложенный цикл условный оператор с оператором break:

for i in range(3):
    for j in range(3):
        if i == j:
            break
        print(i, j)







Изменим оператор прерывания break на оператор continue:

for i in range(3):
    for j in range(3):
        if i == j:
            continue
        print(i, j)

=================================================================

 Примеры решения задач


Таблица состоящая из звездочек состоит из 8 строк и 6 столбцов. Приведенный ниже фрагмент кода можно использовать для вывода одной строки звездочек:

for i in range(6):
    print ( '*', end='')
Для того чтобы завершить весь вывод таблицы звездочек, нам нужно выполнить этот цикл восемь раз. Мы можем поместить этот цикл в еще один цикл, который делает восемь итераций, как показано ниже:

for i in range(8):
    for j in range(6):
        print('*', end='')
    print()



====================================================================

Представим эту комбинацию звездочек, как сочетание строк и столбцов. В этой комбинации всего восемь строк. В первой строке один столбец. Во второй строке – два столбца. В третьей строке – три. И так продолжается до восьмой строки, в которой восемь столбцов.

for i in range(8):
    for j in range(i + 1):
        print('*', end='')
    print()


=======================================================================

Дано натуральное число n \, (n \le 9)n (n≤ 9). Напишите программу, которая печатает таблицу размером n \times 3n×3 состоящую из данного числа (числа отделены одним пробелом).


n = int(input())
for i in range(n):
    for j in range(3):
        print(n, end=' ')
    print()



=========================================================================


Дано натуральное число n \, (n \le 9)n (n≤ 9). Напишите программу, которая печатает таблицу размером n \times 5n×5, где в ii-ой строке указано число ii (числа отделены одним пробелом).

n = int(input())
for i in range(1, n+1):
    for j in range(5):
        j = 1
        print(i, end=' ')
        j += 1
    print()

==============================================================================

Дано натуральное число n \, (n \le 9)n (n≤ 9). Напишите программу, которая печатает таблицу сложения для всех чисел от 11 до nn в соответствии с примером.

n = int(input())
for i in range(1, n+1):
    for j in range(1, 10):
        print(i, '+', j, '=', i+j)
        j += 1
    print()


======================================================================


Дано нечетное натуральное число nn. Напишите программу, которая печатает равнобедренный звездный треугольник с основанием, равным nn в соответствии с примером:


n = int(input())
k = n//2+1
c = '*'
for i in range(1, k+1):
    print(c*i)
    i +=1
for j in range(k-1, 0, -1):
        print(c*j)
print()






n = int(input())

for i in range(1, n + 1):
    for j in range(i):
        if i + j <= n:
            print('*', end='')

    print()


=================================================================


Дано натуральное число nn. Напишите программу, которая печатает численный треугольник в соответствии с примером:

n = int(input())
for i in range(1, n+1):
    for j in range(i):
        print(i, end='')
    print()


================================================================

Задача 1. Найдите все пары натуральных чисел (и их количество) являющихся решением уравнения 12x+13y = 77712x+13y=777.

Решение. Поскольку по условию числа xx и yy являются натуральными, то x \le 64, \, y \le 59 x≤64,y≤59 . Напишем программу, которая перебирает всевозможные пары чисел (x; \, y)(x;y) и проверяет для них выполнение условия 12x+13y = 77712x+13y=777.

total = 0
for x in range(1, 65):
    for y in range(1, 60):
        if 12 * x + 13 * y == 777:
            total += 1
            print('x =', x, 'y =', y)
print('Общее количество натуральных решений =', total)
В результате выполнения такого кода, мы получим:

x = 3 y = 57
x = 16 y = 45
x = 29 y = 33
x = 42 y = 21
x = 55 y = 9
Общее количество натуральных решений = 5

=======================================================================


Задача 2. Найдите все пары натуральных чисел (и их количество) являющихся решением уравнения x^2+y^2+z^2 = 2020x

total = 0
for x in range(1, 45):
    for y in range(1, 45):
        for z in range(1, 45):
            if x ** 2 + y ** 2 + z ** 2 == 2020:
                total += 1
                print('x =', x, 'y =', y, 'z =', z)
print('Общее количество натуральных решений =', total)

============================================================================
